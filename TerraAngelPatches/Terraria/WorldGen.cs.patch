--- src/Terraria/Terraria/WorldGen.cs
+++ src/TerraAngel/Terraria/WorldGen.cs
@@ -3559,15 +_,9 @@
         LiquidBuffer.numLiquidBuffer = 0;
         if (Main.netMode == 1 || lastMaxTilesX > Main.maxTilesX || lastMaxTilesY > Main.maxTilesY)
         {
-            for (int j = 0; j < lastMaxTilesX; j++)
-            {
-                float num = (float)j / (float)lastMaxTilesX;
-                Main.statusText = Lang.gen[46].Value + " " + (int)(num * 100f + 1f) + "%";
-                for (int k = 0; k < lastMaxTilesY; k++)
-                {
-                    Main.tile[j, k] = null;
-                }
-            }
+            Main.statusText = Lang.gen[46].Value + " 0%";
+            Main.tile.ResetHeap();
+            Main.statusText = Lang.gen[46].Value + " 100%";
         }
 
         lastMaxTilesX = Main.maxTilesX;
@@ -3579,22 +_,9 @@
 
         if (Main.netMode != 1)
         {
-            for (int l = 0; l < Main.maxTilesX; l++)
-            {
-                float num2 = (float)l / (float)Main.maxTilesX;
-                Main.statusText = Lang.gen[47].Value + " " + (int)(num2 * 100f + 1f) + "%";
-                for (int m = 0; m < Main.maxTilesY; m++)
-                {
-                    if (Main.tile[l, m] == null)
-                    {
-                        Main.tile[l, m] = new Tile();
-                    }
-                    else
-                    {
-                        Main.tile[l, m].ClearEverything();
-                    }
-                }
-            }
+            Main.statusText = Lang.gen[46].Value + " 0%";
+            Main.tile.ResetHeap();
+            Main.statusText = Lang.gen[46].Value + " 100%";
         }
 
         for (int n = 0; n < Main.countsAsHostForGameplay.Length; n++)
@@ -66261,6 +_,7 @@
 
     public static bool SolidOrSlopedTile(int x, int y)
     {
+        if (!Main.tile.IsTileInLoadedSection(x, y)) return true;
         return SolidOrSlopedTile(Main.tile[x, y]);
     }
 
@@ -66291,13 +_,9 @@
 
     public static bool SolidTile(int i, int j, bool noDoors = false)
     {
+        if (!Main.tile.IsTileInLoadedSection(i, j)) return true;
         try
         {
-            if (Main.tile[i, j] == null)
-            {
-                return true;
-            }
-
             if (Main.tile[i, j].active() && Main.tileSolid[Main.tile[i, j].type] && !Main.tileSolidTop[Main.tile[i, j].type] && !Main.tile[i, j].halfBrick() && Main.tile[i, j].slope() == 0 && !Main.tile[i, j].inActive())
             {
                 if (noDoors && Main.tile[i, j].type == 10)
@@ -77508,6 +_,9 @@
 
     public static void TileFrame(int i, int j, bool resetFrame = false, bool noBreak = false)
     {
+        if (TerraAngel.Hooks.Hooks.MiscHooks.framingDisabled)
+            return;
+
         bool addToList = false;
         try
         {
@@ -82521,7 +_,7 @@
         {
             for (int j = y - 1; j <= y + 1; j++)
             {
-                if (Main.tile[i, j] == null)
+                if (!Main.tile.InWorldAndLoaded(i, j))
                 {
                     return;
                 }
@@ -82825,17 +_,6 @@
 
         Tile tile = Main.tile[num2, num3 - 1];
         Tile tile2 = Main.tile[num2, num3 + 3];
-        if (tile == null)
-        {
-            tile = new Tile();
-            Main.tile[num2, num3 - 1] = tile;
-        }
-
-        if (tile2 == null)
-        {
-            tile2 = new Tile();
-            Main.tile[num2, num3 + 3] = tile2;
-        }
 
         if (!SolidTile(tile) || !SolidTile(tile2))
         {
@@ -82892,35 +_,6 @@
             Tile tile3 = Main.tile[i, num + 1];
             Tile tile4 = Main.tile[i, num + 2];
             Tile tile5 = Main.tile[i, num + 3];
-            if (tile == null)
-            {
-                tile = new Tile();
-                Main.tile[i, num - 1] = tile;
-            }
-
-            if (tile2 == null)
-            {
-                tile2 = new Tile();
-                Main.tile[i, num] = tile2;
-            }
-
-            if (tile3 == null)
-            {
-                tile3 = new Tile();
-                Main.tile[i, num + 1] = tile3;
-            }
-
-            if (tile4 == null)
-            {
-                tile4 = new Tile();
-                Main.tile[i, num + 2] = tile4;
-            }
-
-            if (tile5 == null)
-            {
-                tile5 = new Tile();
-                Main.tile[i, num + 3] = tile5;
-            }
 
             if (!SolidTile(tile))
             {
@@ -83017,7 +_,7 @@
         }
 
         Tile tile = Main.tile[i, j + 1];
-        if (tile == null)
+        if (!Main.tile.InWorldAndLoaded(i, j + 1))
         {
             return false;
         }
@@ -83043,7 +_,7 @@
         }
 
         Tile tile = Main.tile[i, j + 1];
-        if (tile == null)
+        if (!Main.tile.InWorldAndLoaded(i, j + 1))
         {
             return false;
         }
@@ -83066,11 +_,6 @@
 
     public static bool AllowsSandfall(Tile tileTopCache)
     {
-        if (tileTopCache == null)
-        {
-            return false;
-        }
-
         bool result = true;
         if (tileTopCache.active() && (TileID.Sets.BasicChest[tileTopCache.type] || TileID.Sets.BasicChestFake[tileTopCache.type] || tileTopCache.type == 323 || tileTopCache.type == 88 || tileTopCache.type == 80 || tileTopCache.type == 77 || tileTopCache.type == 26 || tileTopCache.type == 475 || tileTopCache.type == 470 || tileTopCache.type == 597))
         {
@@ -83305,7 +_,7 @@
 
     public static bool CanCutTile(int x, int y, TileCuttingContext context)
     {
-        if (Main.tile[x, y + 1] != null && Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 380 && Main.tile[x, y + 1].type != 579)
+        if (Main.tile.InWorldAndLoaded(x, y + 1) && Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 380 && Main.tile[x, y + 1].type != 579)
         {
             if (Main.tile[x, y].type == 254)
             {
@@ -83347,11 +_,8 @@
         {
             for (int j = 0; j < height; j++)
             {
+                if (!Main.tile.InWorldAndLoaded(x + i, y + j)) continue;
                 Tile tile = Main.tile[x + i, y + j];
-                if (tile == null)
-                {
-                    return false;
-                }
 
                 if (tile.liquid > 0 || (tile.wall > 0 && !WallID.Sets.AllowsWind[tile.wall]))
                 {
