--- src/Terraria/Terraria/HitTile.cs
+++ src/TerraAngel/Terraria/HitTile.cs
@@ -7,7 +_,7 @@
 namespace Terraria;
 public class HitTile
 {
-    public class HitTileObject
+    public struct HitTileObject
     {
         public int X;
         public int Y;
@@ -19,6 +_,15 @@
         public Vector2 animationDirection;
         public HitTileObject()
         {
+            X = 0;
+            Y = 0;
+            damage = 0;
+            type = 0;
+            timeToLive = 0;
+            crackStyle = 0;
+            lastCrack = crackStyle;
+            animationTimeElapsed = 0;
+            animationDirection = Vector2.Zero;
             Clear();
         }
 
@@ -29,12 +_,8 @@
             damage = 0;
             type = 0;
             timeToLive = 0;
-            if (rand == null)
-            {
-                rand = new UnifiedRandom((int)DateTime.Now.Ticks);
-            }
 
-            for (crackStyle = rand.Next(4); crackStyle == lastCrack; crackStyle = rand.Next(4))
+            for (crackStyle = Main.rand.Next(4); crackStyle == lastCrack; crackStyle = Main.rand.Next(4))
             {
             }
 
@@ -45,9 +_,8 @@
     internal const int UNUSED = 0;
     internal const int TILE = 1;
     internal const int WALL = 2;
-    internal const int MAX_HITTILES = 500;
+    internal const int MAX_HITTILES = 250;
     internal const int TIMETOLIVE = 60;
-    private static UnifiedRandom rand;
     private static int lastCrack = -1;
     public HitTileObject[] data;
     private int[] order;
@@ -65,10 +_,10 @@
 
     public void ClearThisTile(int x, int y)
     {
-        for (int i = 0; i <= 500; i++)
+        for (int i = 0; i <= MAX_HITTILES; i++)
         {
             int num = order[i];
-            HitTileObject hitTileObject = data[num];
+            ref HitTileObject hitTileObject = ref data[num];
             if (hitTileObject.X == x && hitTileObject.Y == y)
             {
                 Clear(i);
@@ -79,10 +_,9 @@
 
     public HitTile()
     {
-        rand = new UnifiedRandom();
-        data = new HitTileObject[501];
-        order = new int[501];
-        for (int i = 0; i <= 500; i++)
+        data = new HitTileObject[MAX_HITTILES + 1];
+        order = new int[MAX_HITTILES + 1];
+        for (int i = 0; i <= MAX_HITTILES; i++)
         {
             data[i] = new HitTileObject();
             order[i] = i;
@@ -93,10 +_,10 @@
 
     public int TryFinding(int x, int y, int hitType)
     {
-        for (int i = 0; i <= 500; i++)
+        for (int i = 0; i <= MAX_HITTILES; i++)
         {
             int num = order[i];
-            HitTileObject hitTileObject = data[num];
+            ref HitTileObject hitTileObject = ref data[num];
             if (hitTileObject.type == hitType)
             {
                 if (hitTileObject.X == x && hitTileObject.Y == y)
@@ -125,11 +_,11 @@
 
     public int HitObject(int x, int y, int hitType)
     {
-        HitTileObject hitTileObject;
-        for (int i = 0; i <= 500; i++)
+        ref HitTileObject hitTileObject = ref data[0];
+        for (int i = 0; i <= MAX_HITTILES; i++)
         {
             int num = order[i];
-            hitTileObject = data[num];
+            hitTileObject = ref data[num];
             if (hitTileObject.type == hitType)
             {
                 if (hitTileObject.X == x && hitTileObject.Y == y)
@@ -143,7 +_,7 @@
             }
         }
 
-        hitTileObject = data[bufferLocation];
+        hitTileObject = ref data[bufferLocation];
         hitTileObject.X = x;
         hitTileObject.Y = y;
         hitTileObject.type = hitType;
@@ -152,9 +_,9 @@
 
     public void UpdatePosition(int tileId, int x, int y)
     {
-        if (tileId >= 0 && tileId <= 500)
+        if (tileId >= 0 && tileId <= MAX_HITTILES)
         {
-            HitTileObject obj = data[tileId];
+            ref HitTileObject obj = ref data[tileId];
             obj.X = x;
             obj.Y = y;
         }
@@ -162,7 +_,7 @@
 
     public int AddDamage(int tileId, int damageAmount, bool updateAmount = true)
     {
-        if (tileId < 0 || tileId > 500)
+        if (tileId < 0 || tileId > MAX_HITTILES)
         {
             return 0;
         }
@@ -172,7 +_,7 @@
             return 0;
         }
 
-        HitTileObject hitTileObject = data[tileId];
+        ref HitTileObject hitTileObject = ref data[tileId];
         if (!updateAmount)
         {
             return hitTileObject.damage + damageAmount;
@@ -190,13 +_,13 @@
     {
         if (tileId == bufferLocation)
         {
-            bufferLocation = order[500];
+            bufferLocation = order[MAX_HITTILES];
             if (tileId != bufferLocation)
             {
                 data[bufferLocation].Clear();
             }
 
-            for (int num = 500; num > 0; num--)
+            for (int num = MAX_HITTILES; num > 0; num--)
             {
                 order[num] = order[num - 1];
             }
@@ -206,7 +_,7 @@
         else
         {
             int num;
-            for (num = 0; num <= 500 && order[num] != tileId; num++)
+            for (num = 0; num <= MAX_HITTILES && order[num] != tileId; num++)
             {
             }
 
@@ -224,29 +_,29 @@
 
     public void Clear(int tileId)
     {
-        if (tileId >= 0 && tileId <= 500)
+        if (tileId >= 0 && tileId <= MAX_HITTILES)
         {
             data[tileId].Clear();
             int i;
-            for (i = 0; i < 500 && order[i] != tileId; i++)
+            for (i = 0; i < MAX_HITTILES && order[i] != tileId; i++)
             {
             }
 
-            for (; i < 500; i++)
+            for (; i < MAX_HITTILES; i++)
             {
                 order[i] = order[i + 1];
             }
 
-            order[500] = tileId;
+            order[MAX_HITTILES] = tileId;
         }
     }
 
     public void Prune()
     {
         bool flag = false;
-        for (int i = 0; i <= 500; i++)
+        for (int i = 0; i <= MAX_HITTILES; i++)
         {
-            HitTileObject hitTileObject = data[i];
+            ref HitTileObject hitTileObject = ref data[i];
             if (hitTileObject.type == 0)
             {
                 continue;
@@ -307,7 +_,7 @@
         while (flag)
         {
             flag = false;
-            for (int j = num; j < 500; j++)
+            for (int j = num; j < MAX_HITTILES; j++)
             {
                 if (data[order[j]].type == 0 && data[order[j + 1]].type != 0)
                 {
