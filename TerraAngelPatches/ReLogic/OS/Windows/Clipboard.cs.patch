--- src/Terraria/ReLogic/OS/Windows/Clipboard.cs
+++ src/TerraAngel/ReLogic/OS/Windows/Clipboard.cs
@@ -1,6 +_,5 @@
 using System;
 using System.Threading;
-using System.Windows.Forms;
 using ReLogic.OS.Base;
 
 namespace ReLogic.OS.Windows
@@ -14,83 +_,12 @@
 
         protected override void SetClipboard(string text)
         {
-            if (string.IsNullOrEmpty(text))
-            {
-                return;
-            }
-
-            try
-            {
-                InvokeInStaThread(delegate
-                {
-                    System.Windows.Forms.Clipboard.SetText(text);
-                });
-            }
-            catch
-            {
-                Console.WriteLine("Failed to set clipboard contents!");
-            }
+            SDL2.SDL.SDL_SetClipboardText(text);
         }
 
         private string TryToGetClipboardText()
         {
-            try
-            {
-                return InvokeInStaThread(() => System.Windows.Forms.Clipboard.GetText());
-            }
-            catch
-            {
-                string result = "";
-                Console.WriteLine("Failed to get clipboard contents!");
-                return result;
-            }
-        }
-
-        private static T InvokeInStaThread<T>(Func<T> callback)
-        {
-            if (GetApartmentStateSafely() == ApartmentState.STA)
-            {
-                return callback();
-            }
-
-            T result = default(T);
-            Thread thread = new Thread((ThreadStart)delegate
-            {
-                result = callback();
-            });
-            thread.SetApartmentState(ApartmentState.STA);
-            thread.Start();
-            thread.Join();
-            return result;
-        }
-
-        private static void InvokeInStaThread(Action callback)
-        {
-            if (GetApartmentStateSafely() == ApartmentState.STA)
-            {
-                callback();
-                return;
-            }
-
-            Thread thread = new Thread((ThreadStart)delegate
-            {
-                callback();
-            });
-            thread.SetApartmentState(ApartmentState.STA);
-            thread.Start();
-            thread.Join();
-        }
-
-        private static ApartmentState GetApartmentStateSafely()
-        {
-            try
-            {
-                return Thread.CurrentThread.GetApartmentState();
-            }
-            catch
-            {
-                return ApartmentState.MTA;
-            }
+            return SDL2.SDL.SDL_GetClipboardText();
         }
     }
 }
