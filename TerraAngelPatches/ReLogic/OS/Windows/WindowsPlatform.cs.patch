--- src/Terraria/ReLogic/OS/Windows/WindowsPlatform.cs
+++ src/TerraAngel/ReLogic/OS/Windows/WindowsPlatform.cs
@@ -1,41 +_,20 @@
 using System;
 using ReLogic.Localization.IME;
+using ReLogic.OS.FNA;
 
 namespace ReLogic.OS.Windows;
 internal class WindowsPlatform : Platform
 {
-    private WindowsMessageHook _wndProcHook;
-    private bool _disposedValue;
     public WindowsPlatform() : base(PlatformType.Windows)
     {
-        RegisterService((IClipboard)new Clipboard());
+        RegisterService((IClipboard)new FNAClipboard());
         RegisterService((IPathService)new PathService());
-        RegisterService((IWindowService)new WindowService());
+        RegisterService((IWindowService)new FNAWindow());
         RegisterService((IImeService)new UnsupportedPlatformIme());
     }
 
     public override void InitializeClientServices(IntPtr windowHandle)
     {
-        if (_wndProcHook == null)
-        {
-            _wndProcHook = new WindowsMessageHook(windowHandle);
-        }
-
-        RegisterService((IImeService)new WindowsIme(_wndProcHook, windowHandle));
-    }
-
-    protected override void Dispose(bool disposing)
-    {
-        if (!_disposedValue)
-        {
-            if (disposing && _wndProcHook != null)
-            {
-                _wndProcHook.Dispose();
-                _wndProcHook = null;
-            }
-
-            _disposedValue = true;
-            base.Dispose(disposing);
-        }
+        RegisterService((IImeService)new FNAIme());
     }
 }
